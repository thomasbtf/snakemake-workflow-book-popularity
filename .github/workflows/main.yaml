name: Tests

on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - "*"

jobs:
  Previous-job-canceling:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: khan/pull-request-workflow-cancel@1.0.0
        with:
          workflows: "main.yml"
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'


  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true


  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint workflow
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge peppy
          args: "--lint"


  Testing:
    needs:
      - Formatting
      - Linting
    
    strategy:
      matrix:
        rule: [all]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install tree
        run: sudo apt-get install tree

      - name: Get date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            .tests/.snakemake/conda
          key: ${{ runner.os }}-dependencies-${{ steps.get-date.outputs.date }}-${{ hashFiles('*.tests/.snakemake/conda/*.yaml') }}
          restore-keys: |
            ${{ runner.os }}-dependencies-${{ steps.get-date.outputs.date }}-
            ${{ runner.os }}-dependencies-

      - name: Test rule ${{ matrix.rule }}
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .tests
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge peppy -y
          args: "--use-conda --conda-frontend mamba --show-failed-logs --cores 2 --conda-cleanup-pkgs cache ${{ matrix.rule }}"

      - name: Test report
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .tests
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge peppy
          args: "${{ matrix.rule }} --report report.zip"

      - name: Upload report
        uses: actions/upload-artifact@v2
        with:
          name: report-${{ matrix.rule }}
          path: .tests/report.zip

      - name: Print disk space
        run: sudo df -h

      - name: Print tree
        run: tree .tests/ -C

      - name: Change permissions for caching
        run: sudo chmod -R 755 .tests/.snakemake/conda